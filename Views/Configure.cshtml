@using Nop.Plugin.Misc.CodeInjector.Models;
@using Nop.Web.Framework.Models.DataTables
@model ConfigurationModel
@{
	Layout = "_ConfigurePlugin";
}

<script>
	function HideShow() {
		var x = document.getElementById("newCodeToInjectContent");
		if (x.style.display === "none") {
			x.style.display = "block";
		} else {
			x.style.display = "none";
		}
	}
</script>



<div class="cards-group">
	<div class="card-body">
		@Html.Partial("~/Plugins/Misc.CodeInjector/Views/Shared/SettingsForm.cshtml", Model.Settings)
	</div>

	<div class="content-header clearfix">
		<div class="float-right">
			<a onclick="HideShow()" class="btn btn-primary">
				<i class="fas fa-plus-square"></i>
				@T("Admin.Common.AddNew")
			</a>
		</div>
	</div>
	<div class="card-body">
		<div id="newCodeToInjectContent" class="card card-default" style="display: none">
			<div class="card-header">
				@T("Admin.Common.AddNewRecord")
			</div>

			<div class="card-body">
				<div class="form-group row">
					<div class="col-md-3">
						<nop-label asp-for="@Model.AddModel.Name)" />
					</div>
					<div class="col-md-9">
						<nop-editor asp-for="@Model.AddModel.Name" />
						<span asp-validation-for="@Model.AddModel.Name"></span>
					</div>
				</div>
				<div class="form-group row">
					<div class="col-md-3">
						<nop-label asp-for="@Model.AddModel.Zone" />
					</div>
					<div class="col-md-9">
						<select asp-for="@Model.AddModel.Zone" asp-items="@Model.Zones" class="dropdownlists"></select>
						<span asp-validation-for="@Model.AddModel.Zone"></span>
					</div>
				</div>
				<div class="form-group row">
					<div class="col-md-3">
						<nop-label asp-for="@Model.AddModel.Code" />
					</div>
					<div class="col-md-9">
						<nop-editor asp-for="@Model.AddModel.Code" />
						<span asp-validation-for="@Model.AddModel.Code"></span>
					</div>
				</div>
				<div class="form-group row">
					<div class="col-md-3">
						<nop-label asp-for="@Model.AddModel.Order" />
					</div>
					<div class="col-md-9">
						<nop-editor asp-for="@Model.AddModel.Order" />
						<span asp-validation-for="@Model.AddModel.Order"></span>
					</div>
				</div>
				<div class="form-group row">
					<div class="col-md-9 offset-md-3">
						<button type="button" id="addCodeToInject" class="btn btn-primary">@T("Admin.Common.AddNew")</button>
					</div>
				</div>
			</div>
			<script>
				$(document).ready(function () {
					$('#addCodeToInject').click(function () {
						$('#addCodeToInject').attr('disabled', true);
						var postData = {
							Name: $('#@Html.IdFor(model => model.AddModel.Name)').val(),
							Code: $('#@Html.IdFor(model => model.AddModel.Code)').val(),
							Zone: $('#@Html.IdFor(model => model.AddModel.Zone)').val(),
							Order: $('#@Html.IdFor(model => model.AddModel.Order)').val()
						};

						addAntiForgeryToken(postData);

						$.ajax({
							cache: false,
							type: 'POST',
							url: '@Html.Raw(Url.Action("Add", "CodeInjector", null))',
							data: postData,
							success: function (data, textStatus, jqXHR) {
								if (data.Result) {
									$('#@Html.IdFor(model => model.AddModel.Code)').val('');
									$('#@Html.IdFor(model => model.AddModel.Zone)').val('');
									$('#@Html.IdFor(model => model.AddModel.Name)').val('');
									$('#@Html.IdFor(model => model.AddModel.Order)').val('');
									updateTable('#codetoinject-grid');
								} else {
									display_nop_error(data);
								}
							},
							complete: function (jqXHR, textStatus) {
								$('#addCodeToInject').attr('disabled', false);
							}
						});
					});
				});
			</script>
		</div>
	</div>

	<div class="card-body">
	@*Buscador*@
		<form asp-controller="CodeToInject" asp-action="Get">
			<div class="card card-default card-search form-horizontal">
				<div class="card-body">
					<div class="search-body">
						<div class="row">
							<div class="col-md-6">
								<div class="form-group row">
									<div class="col-md-4">
										<nop-label asp-for="@Model.AddModel.Name" />
									</div>
									<div class="col-md-8">
										<nop-editor asp-for="@Model.AddModel.Name" />
									</div>
								</div>
							</div>
							<div class="col-md-6">
								<div class="form-group row">
									<div class="col-md-4">
										<nop-label asp-for="@Model.AddModel.Zone" />
									</div>
									<div class="col-md-8">
										<nop-editor asp-for="@Model.AddModel.Zone" />
									</div>
								</div>
							</div>

						</div>
						<div class="form-group row">
							<div class="text-center col-12">
								<button type="button" id="search-codetoinject" class="btn btn-primary btn-search">
									<i class="fas fa-search"></i>
									@T("Admin.Common.Search")
								</button>
							</div>
						</div>
					</div>
				</div>
			</div>
		</form>
	</div>
</div>

@await Html.PartialAsync("Table", new DataTablesModel
{
    Name = "codetoinject-grid",
    UrlRead = new DataUrl("Get", "CodeInjector"),
	UrlDelete = new DataUrl("Remove", "CodeInjector"),
	Processing = true,
	PrimaryKeyColumn = nameof(CodeToInjectDTO.Id),
	Paging = true,
	Ordering = true,
	SearchButtonId = "search-codetoinject",
	Info = false,
	Length = Model.SearchModel.PageSize,
	LengthMenu = Model.SearchModel.AvailablePageSizes,
	Filters = new List<FilterParameter>
    {
        new FilterParameter(nameof(CodeToInjectDTO.Zone)),
        new FilterParameter(nameof(CodeToInjectDTO.Name))
    },
    ColumnCollection = new List<ColumnProperty>
    {
		new ColumnProperty(nameof(CodeToInjectDTO.Id))
        {
            Title = "Id",
			Visible = false
        },
        new ColumnProperty(nameof(CodeToInjectDTO.Name))
        {
            Title = "Name",
			EditType = EditType.String,
			Searchable = true
        },
		new ColumnProperty(nameof(CodeToInjectDTO.Zone))
        {
            Title = "Name",
			EditType = EditType.String,
			Searchable = true
        },
		new ColumnProperty(nameof(CodeToInjectDTO.Code))
        {
            Title = "Name",
			EditType = EditType.String,
			Searchable = true
        },
		new ColumnProperty(nameof(CodeToInjectDTO.Order))
        {
            Title = "Name",
			EditType = EditType.Number,
			Searchable = true
        },
		new ColumnProperty(nameof(CodeToInjectDTO.Id))
		{
            Title = T("Admin.Common.Delete").Text,
            Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
            ClassName = NopColumnClassDefaults.Button
        }
    }
})